TestNG Cheat Sheet: Annotations and Attributes Made Simple.

Want better control over your test execution? Here‚Äôs a quick breakdown of TestNG annotations and attributes to supercharge your testing:

üîπCore Annotations

 ‚Ä¢ @BeforeSuite: Runs before all tests in a suite.
 ‚Ä¢ @BeforeClass: Runs before the first test in a class.
 ‚Ä¢ @BeforeMethod: Executes before each test method.
 ‚Ä¢ @Test: Marks a method as a test case.
 ‚Ä¢ @AfterMethod, @AfterClass, @AfterSuite: Handle post-test cleanup.

üîπExecution Control

 ‚Ä¢ Sequential Execution: Runs tests one after another.
 ‚Ä¢ Parallel Execution: Use XML configurations for faster parallel test runs.

üîπTestNG Attributes (Inside @Test)

 ‚Ä¢ priority: Decide the test execution order.
 ‚Ä¢ invocationCount: Repeat a test multiple times.
 ‚Ä¢ invocationTimeOut: Set a time limit for execution.
 ‚Ä¢ dependsOnMethods: Run tests in a specific sequence.
 ‚Ä¢ alwaysRun: Ensures execution even if dependencies fail.
 ‚Ä¢ enabled: Skip tests by setting it to false.

üîπExample:

@Test(priority = 1, invocationCount = 3, dependsOnMethods = "previousTest", alwaysRun = true, enabled = false) 
public void testMethod() { 
 // Test logic here 
} 

Use these tips to make your TestNG scripts clean, efficient, and powerful.

============================


Selenium WebDriver: 

1) What are different types of locators in Selenium?
2) When do you use Xpath over CSS locators?
3) How to get a specific value from a dropdown and reuse it in verifications?
4) When do we use JavaScript Executors?
5) Is it possible to validate Captcha using Selenium, if Yes how?
6) What should be the ideal way to store data using Selenium WebDriver only?
7) Is it possible to use Xpath like parent/child/node/.. ? If yes, then provide an example where to use it?
8) What happens if you receive browser notifications in between Test Automation Execution?
9) Why does Stale Element exception occurs and how to handle it?
10) What is Invalid Certificate Exception?

APIs:

1) What are the components of an HTTP request?
2) What is the difference between API and unit testing?
3) What is an HTTP response?
4) How we can add validation points in postman?
5) What do you understand by Server-side validation?
6) What is 3 tier Architecture? 
7) Difference between webservice & APIs
8) What is Rest, Soap & GraphQL in APIs
9) What do you test in standalone API?
10) What do test in 3rd party integrated APIs?

Postman: 

1) When to use collection, environment & global variables
2) How to execute a collection E2E
3) How to validate a API response has correct status code?
4) What happens when API response returns Form Data instead of Json, how to validate it?
5) How to setup Basic Auth in Postman?
6) Where do you store Environment credentials?
7) How to save a demo response for an API request?
8) How will you validate an API rqst if VPN is required for it to work?
9) How do you filter results in a API request using Postman?
10) How to setup custom headers in Postman?


Git: 
1) What are the different stages in committing the code to GitHub?
2) Is it possible to revert back changes in a remote repo? If yes, how?
3) When do you commit your code? After commit how do you validate everyone has the updated code now?
4) How to merge stashed changes in local repo?
5) Why do we need GitIgnore file? How to add ignore files in it?

TestNG: 

1) What is the execution format of Tests in TestNG?
2) Can priority be negative in for methods? If Yes, then what is the execution flow as per priority?
3) What is the difference in DependonMethod & dependsongroups?
4) What are different ways to exclude tests in TestNG
5) What does ThreadPoolSize mean in TestNG? How does it work?
6) Why do we need BeforeSuite & AfterSuite annotations?

=============================

üí° Commonly Asked Questions: 
1. Explain the Selenium architecture and its components. 
2. How do you handle dynamic elements using XPath or CSS selectors? 
3. What is your approach to building a custom automation framework? 
4. Explain explicit vs. implicit waits with examples. 
5. How do you perform data-driven testing using Java and TestNG? 
6. How do you integrate test execution reports with tools like ExtentReports or Allure? 
7. Explain the process for automating REST APIs using Postman or RestAssured. 
8. What are Page Object Model (POM) and Page Factory? When would you use them? 
9. How do you manage test data for automation, including using Excel or databases? 
10. Describe a challenging automation testing scenario you handled and how you resolved it. 
11. How do you implement parallel testing using Selenium Grid or TestNG? 
12. What is the difference between Assertions and Verifications in Selenium? 
13. How do you automate file uploads or downloads in Selenium? 
14. Explain the role of Maven or Gradle in automation testing projects. 
15. How do you use Git for version control in automation scripts? 
16. What is the difference between Functional Testing and Non-Functional Testing? 
17. What are Fluent Waits, and how do they differ from explicit waits? 
18. How do you handle browser compatibility testing? 
19. Describe how you handle pop-ups, alerts, and frames in Selenium. 
20. What are the best practices for writing reliable and maintainable automation scripts?

==============================

#ManualTestingQuestions:

1. Have you worked in Agile methodology? Explain it.
2. Explain the points you consider while writing a good test case.
3. What is the Bug Life Cycle?
4. Difference between Test Scenario vs Test Case.
5. Difference between Functional vs Non-Functional Testing.
6. Difference between Smoke and Sanity Testing.
7. What is STLC in software testing?
8. Difference between Alpha and Beta Testing.
9. How many tests have you automated in a single sprint?
10. How do you decide which test cases to automate?
11. Which test cases would you not automate?
12. Is 100% automation possible?
13. Important things to consider when logging a bug.
14. Where do you write your test cases? In Excel or some other tool?

#AutomationTesting Interview Questions:

1. Difference between implicit and explicit waits.
2. Asked to share screen and write XPath for a given element.
3. Use of Actions class and Select class.
4. Explain your roles and responsibilities.
5. Exceptions faced while working with Selenium (Give 5 examples).
6. OOPS concepts (Inheritance, Abstraction, Polymorphism, etc.).
7. Difference between findElement() vs findElements().
8. How to handle alerts in Selenium?
9. Write Selenium code to take a screenshot.
10. What is priority in TestNG?
11. Reports used in your framework.
12. Difference between Scenario vs Scenario Outline in Cucumber BDD.
13. Explain the framework you are working on.
14. What are tags in Cucumber?
15. How do you manage test data in your framework?
16. Abstract class vs Interface.
17. Write Java code to reverse a string and perform array manipulation.
18. Questions from HashMap, HashSet.
19. Difference between Array and ArrayList.
20. What is Collection in Java?
21. Why is String immutable in Java?
22. Difference between Collection and Collections.
23. Difference between StringBuffer and StringBuilder.
24. API status codes difference (400, 401, 201, 200, etc.).
25. Difference between PUT vs PATCH request.
26. Basic GitHub commands (git add, git commit, git diff).

===========================================


Synechron Interview Questions for hashtag#QA role (6+ yr exp):
1. Explain about your framework?
2. Have you used POM in your framework?
3. What is Page Factory?
4. Suppose you have 7 pages in your application then to achieve POM what u will do?
5. Have you used interface in your framework other then selenium interfaces?
6. What are all the selenium interfaces?
7. Synchronization in selenium? syntax for implicit wait
8. How u will handle popup window ?other then get window handle
9. What is Listeners?
10. How u will handle alert?
11. How to get system date and time?
12. How to connect to database?
13. Exceptions in selenium?
14. Suppose u have class and abstract class in class there is a user defined constructor and main method which one will get execute first?
15. Primitives and Non Primitives datatypes in java? String is primitive or non primitive
16. What is Hashmap ? Can we store objects in hash map and how to retrieve them?
17. What is Jenkins?
18. What is the use of Pom.xml?
19. What is the use of testng.xml?
20. Annotations used in page object model


=======================================

 #HCLTech #AutomationTester Interview Questions ‚ùì 

#Round1:

1. Describe your experience with various automation testing tools.
2. How do you approach designing a robust automation framework from scratch? What are the key components you consider?
3. Can you explain the difference between data-driven testing and keyword-driven testing? Provide examples of when you might use each approach.
4. What strategies do you employ for handling dynamic elements or elements with changing attributes in automation scripts?
5. Have you worked with Continuous Integration/Continuous Deployment (CI/CD) pipelines in your automation projects? If yes, describe your role and contributions to the process.
6. Describe a particularly challenging automation problem you encountered in your previous projects. How did you solve it?
7. How do you handle testing of web services or APIs in your automation projects?
8.Have you integrated your automation tests with any test management or bug tracking tools? If yes, how did you approach it, and what benefits did you provide?
9. Can you discuss a scenario where you had to perform cross-browser testing in your automation projects? How did you ensure compatibility across different browsers?
10. How do you handle test data management and data-driven testing in your automation projects?

---

#Round2:

1. Explain your experience in designing and implementing automation frameworks. What design patterns have you utilized and why?
2. Describe your experience with Test-Driven Development (TDD) and Behavior-Driven Development (BDD). How do these methodologies influence your automation testing practices?
3. Have you implemented any strategies for parallel test execution in your automation frameworks? How do you ensure optimal resource utilization and testing efficiency?
4. Can you discuss your experience with integrating automation tests into the CI/CD pipeline? How do you ensure fast feedback loops and reliable test results within a continuous delivery environment?
5. How do you handle testing of microservices architecture in your automation projects? What challenges have you encountered, and how did you address them?
6. Describe your approach to handling non-functional testing aspects such as security, performance, and accessibility testing within your automation frameworks.
7. Have you implemented any techniques for automating the testing of mobile applications beyond traditional UI automation?
8. How do you ensure comprehensive test coverage in your automation suites, especially in scenarios involving complex logic?


=======================================


#Capgemini QA Automation interview questions!?

1. Write a program to find duplicate elements in a string array.
2. How would you introduce yourself briefly and effectively?
3. Explain the framework you have worked with in your automation testing process.
4. How do you handle closing the second window of a browser in automation testing?
5. Differentiate between XPath and CSS selectors.
6. What is the syntax for a LinkText XPath locator?
7. What changes or setups do you perform before starting execution in your framework?
8. How do you handle change requests in your application? Describe the steps you follow.
9. How often do you trigger regression test scripts? How do you manage them in your repository?
10. What challenges have you encountered in automation testing, and how did you overcome them?
11. Explain the differences between GET and POST methods in API testing.
12. What are the essential components of the GET and POST methods?
13. Discuss HTTP status codes like 401 and 503.
14. How do you validate the response code in API testing?
15. What format do you use for assertions in your tests?
16. Explain the difference between 200 and 201 HTTP status codes.
17. Provide the syntax for query parameters in API requests.


======================================

#Capgemini QA Automation interview questions!? ‚ùì 

1. Write a program to find duplicate elements in a string array.
2. How would you introduce yourself briefly and effectively?
3. Explain the framework you have worked with in your automation testing process.
4. How do you handle closing the second window of a browser in automation testing?
5. Differentiate between XPath and CSS selectors.
6. What is the syntax for a LinkText XPath locator?
7. What changes or setups do you perform before starting execution in your framework?
8. How do you handle change requests in your application? Describe the steps you follow.
9. How often do you trigger regression test scripts? How do you manage them in your repository?
10. What challenges have you encountered in automation testing, and how did you overcome them?
11. Explain the differences between GET and POST methods in API testing.
12. hat are the essential components of the GET and POST methods?
13. Discuss HTTP status codes like 401 and 503.
14. How do you validate the response code in API testing?
15. What format do you use for assertions in your tests?
16. Explain the difference between 200 and 201 HTTP status codes.
17. Provide the syntax for query parameters in API requests.

===============================================

Frequently asked #Selenium with #Java interview questions(2-5 yrs exp)
============

1.What is Selenium? Explain the different components of Selenium.
2.What is Selenium WebDriver, and how does it differ from Selenium RC?
3.How do you launch a browser in Selenium WebDriver?
4.How do you handle browser alerts in Selenium WebDriver?
5. How do you handle multiple windows in Selenium?
6. What is the difference between findElement() and findElements() in Selenium?
7.How do you capture screenshots in Selenium WebDriver?
8.How do you handle dropdowns in Selenium?
9.How do you handle dynamic web elements in Selenium?
10.How do you handle frames in Selenium WebDriver?
11.What are the different locators available in Selenium WebDriver?
12.Explain the difference between XPath and CSS selectors. Which one is faster?
13.How do you perform drag and drop in Selenium WebDriver?
14.How can you perform mouse hover actions in Selenium?
15.Explain the concept of implicit wait and explicit wait in Selenium.
16.What are the different types of waits available in Selenium WebDriver?
17.What is fluent wait in Selenium, and how is it different from explicit wait?
18.How can you switch between different browser tabs using Selenium WebDriver?
19.How do you interact with web elements like buttons, text boxes, etc., in Selenium?
20.How can you handle JavaScript alerts using Selenium WebDriver?

TestNG
============
1.How do you integrate Selenium with TestNG?
2.Explain the annotation hierarchy in TestNG.
3.What is the difference between @BeforeMethod and @BeforeClass in TestNG?
4.How do you execute test cases parallelly in TestNG?
5.How can you prioritize test cases in TestNG?
6.What is the purpose of @DataProvider in TestNG?
7.How do you run failed test cases in TestNG?
8.How do you generate TestNG reports?
9.What is SoftAssert and HardAssert in TestNG?
10.How do you group test cases in TestNG?

=======================================

#InterviewQuestions #Java #Selenium #SDET #AutomationTesting #CrackCodingRound #Testing #QA #SeniorSDET #APITesting #UITesting #Part2

Round 1 (L1): Focuses on technical skills, involving coding problems to assess foundational knowledge and problem-solving abilities.
Round 2 (L2): Explores advanced technical concepts and domain-specific challenges.
Round 3 (L3): Managerial interview to evaluate communication skills, teamwork, and handling real-world scenarios.
Round 4 (L4): HR interview for cultural fit, salary discussions, and formalities.

API Testing Questions:
1. What is the difference between PUT and PATCH?
2. What is the difference between authorization and authentication?
3. Explain the various HTTP status codes across series 1xx, 2xx, 3xx, 4xx, and 5xx.
4. Given a JSON payload, retrieve specific nodes based on provided conditions.
5. What are serialization and deserialization? Write code to create a POJO for handling them.
6. Explain the API framework you‚Äôve worked on (e.g., Cucumber BDD, TestNG). Include details about reporting, data-driven testing, etc.
Code and automate a given API.
7. If given any API for testing, what aspects will you focus on?

========================================


1.What is the difference between an abstract class and an interface in Java? 
2.Explain the concept of method overloading and method overriding with examples. 
3.What are the key differences between a static method and an instance method? 
4.What is the difference between '==' and '.equals()' when comparing objects? 
5.Explain the concept of the Java memory model, stack vs. heap. Exception Handling 
6.What is the purpose of the throw and throws keywords in Java? 
7.Can you explain how the exception hierarchy works in Java? 
8.How does the Java finally block work, and when is it executed? Multithreading & Concurrency 
9.Explain the significance of the volatile keyword in Java. 
10.How does a thread pool work in Java? Why should you use it? 
11.What is the difference between wait(), notify(), and notifyAll() in Java? Collections Framework 
12.How do you prevent a ConcurrentModificationException in Java collections? 13.What is the difference between Iterator and ListIterator? 
14.Explain the difference between LinkedHashMap and HashMap in Java. JVM Internals 
15.What is the Java ClassLoader, and how does it work? 
16.Can you explain the concept of Just-In-Time (JIT) compilation in Java? 
17.How does garbage collection work in Java, and what are the types of GC?


========================================

#Deloitte - Interview Questions for QA Automation Profile

‚úÖ Technical 1
1. Common question( Intro+ project + framework architecture)
2. Data selection in Calendar, Excel iteration then send values to text box.
3. What are Idempotent methods? How is it relevant in RESTful web
services domain?
4. Based on what factors, you can decide which type of web services you
need to use ‚Äî SOAP or REST?
5. What is Payload in terms of RESTful web services?
6. importance of API documentation in API automation testing?
7. Have you integrated automation testing into CI/CD pipelines before?
8. Explain PSVM, SYSOUT?
9. Jenkins and GIT
10. Basic selenium question and sql?

‚úÖ Technical 2

1. Common question(Intro)
2. Java(Collection Questions only)
3. Java Programming (Sort array in reverse order)
4. How do you handle maintenance and updates of automated test scripts?
5. Does finally {} block always run?
6. Automate one page (Login-Add to cart Assert-logout-Reporting).

‚úÖ Managerial Round

1. In manual testing, it takes 10 minutes, whereas in automation, it takes
10 minutes to check a functionality, so what would be your preference? and
Why?
2. how comfortable are you with programming languages other than Java
Selenium?
3. How do we identify what can be automated?
4. Can you discuss a challenging automation project you‚Äôve worked on and
how you overcame obstacles?
5. How do you stay updated with the latest trends and best practices in
automation testing?
6. Normal discussion about previous work? What you like the most?

=============================================

#Automation Testing Interview Questions:

1. Difference between implicit and explicit waits.
2. Asked to share the screen and write XPath for a given element.
3. Use of Actions class and Select class.
4. Explain your roles and responsibilities.
5. Exceptions faced while working with Selenium (Give 5 examples).
6. OOPS concepts (Inheritance, Abstraction, Polymorphism, etc.).
7. Difference between findElement() vs findElements().
8. How to handle alerts in Selenium?
9. Write Selenium code to take a screenshot.
10. What is the priority in TestNG?
11. Reports used in your framework.
12. Difference between Scenario vs Scenario Outline in Cucumber BDD.
13. Explain the framework you are working on.
14. What are tags in Cucumber?
15. How do you manage test data in your framework?
16. Abstract class vs Interface.
17. Write Java code to reverse a string and perform array manipulation.
18. Questions from HashMap, HashSet.
19. Difference between Array and ArrayList.
20. What is a Collection in Java?
21. Why is String immutable in Java?
22. Difference between Collection and Collections.
23. Difference between StringBuffer and StringBuilder.
24. API status codes difference (400, 401, 201, 200, etc.).
25. Difference between PUT vs PATCH request.
26. Basic GitHub commands (git add, git commit, git diff)

==============================================



