TestNG Cheat Sheet: Annotations and Attributes Made Simple.

Want better control over your test execution? Here‚Äôs a quick breakdown of TestNG annotations and attributes to supercharge your testing:

üîπCore Annotations

 ‚Ä¢ @BeforeSuite: Runs before all tests in a suite.
 ‚Ä¢ @BeforeClass: Runs before the first test in a class.
 ‚Ä¢ @BeforeMethod: Executes before each test method.
 ‚Ä¢ @Test: Marks a method as a test case.
 ‚Ä¢ @AfterMethod, @AfterClass, @AfterSuite: Handle post-test cleanup.

üîπExecution Control

 ‚Ä¢ Sequential Execution: Runs tests one after another.
 ‚Ä¢ Parallel Execution: Use XML configurations for faster parallel test runs.

üîπTestNG Attributes (Inside @Test)

 ‚Ä¢ priority: Decide the test execution order.
 ‚Ä¢ invocationCount: Repeat a test multiple times.
 ‚Ä¢ invocationTimeOut: Set a time limit for execution.
 ‚Ä¢ dependsOnMethods: Run tests in a specific sequence.
 ‚Ä¢ alwaysRun: Ensures execution even if dependencies fail.
 ‚Ä¢ enabled: Skip tests by setting it to false.

üîπExample:

@Test(priority = 1, invocationCount = 3, dependsOnMethods = "previousTest", alwaysRun = true, enabled = false) 
public void testMethod() { 
 // Test logic here 
} 

Use these tips to make your TestNG scripts clean, efficient, and powerful.

============================


Selenium WebDriver: 

1) What are different types of locators in Selenium?
2) When do you use Xpath over CSS locators?
3) How to get a specific value from a dropdown and reuse it in verifications?
4) When do we use JavaScript Executors?
5) Is it possible to validate Captcha using Selenium, if Yes how?
6) What should be the ideal way to store data using Selenium WebDriver only?
7) Is it possible to use Xpath like parent/child/node/.. ? If yes, then provide an example where to use it?
8) What happens if you receive browser notifications in between Test Automation Execution?
9) Why does Stale Element exception occurs and how to handle it?
10) What is Invalid Certificate Exception?

APIs:

1) What are the components of an HTTP request?
2) What is the difference between API and unit testing?
3) What is an HTTP response?
4) How we can add validation points in postman?
5) What do you understand by Server-side validation?
6) What is 3 tier Architecture? 
7) Difference between webservice & APIs
8) What is Rest, Soap & GraphQL in APIs
9) What do you test in standalone API?
10) What do test in 3rd party integrated APIs?

Postman: 

1) When to use collection, environment & global variables
2) How to execute a collection E2E
3) How to validate a API response has correct status code?
4) What happens when API response returns Form Data instead of Json, how to validate it?
5) How to setup Basic Auth in Postman?
6) Where do you store Environment credentials?
7) How to save a demo response for an API request?
8) How will you validate an API rqst if VPN is required for it to work?
9) How do you filter results in a API request using Postman?
10) How to setup custom headers in Postman?


Git: 
1) What are the different stages in committing the code to GitHub?
2) Is it possible to revert back changes in a remote repo? If yes, how?
3) When do you commit your code? After commit how do you validate everyone has the updated code now?
4) How to merge stashed changes in local repo?
5) Why do we need GitIgnore file? How to add ignore files in it?

TestNG: 

1) What is the execution format of Tests in TestNG?
2) Can priority be negative in for methods? If Yes, then what is the execution flow as per priority?
3) What is the difference in DependonMethod & dependsongroups?
4) What are different ways to exclude tests in TestNG
5) What does ThreadPoolSize mean in TestNG? How does it work?
6) Why do we need BeforeSuite & AfterSuite annotations?

=============================

üí° Commonly Asked Questions: 
1. Explain the Selenium architecture and its components. 
2. How do you handle dynamic elements using XPath or CSS selectors? 
3. What is your approach to building a custom automation framework? 
4. Explain explicit vs. implicit waits with examples. 
5. How do you perform data-driven testing using Java and TestNG? 
6. How do you integrate test execution reports with tools like ExtentReports or Allure? 
7. Explain the process for automating REST APIs using Postman or RestAssured. 
8. What are Page Object Model (POM) and Page Factory? When would you use them? 
9. How do you manage test data for automation, including using Excel or databases? 
10. Describe a challenging automation testing scenario you handled and how you resolved it. 
11. How do you implement parallel testing using Selenium Grid or TestNG? 
12. What is the difference between Assertions and Verifications in Selenium? 
13. How do you automate file uploads or downloads in Selenium? 
14. Explain the role of Maven or Gradle in automation testing projects. 
15. How do you use Git for version control in automation scripts? 
16. What is the difference between Functional Testing and Non-Functional Testing? 
17. What are Fluent Waits, and how do they differ from explicit waits? 
18. How do you handle browser compatibility testing? 
19. Describe how you handle pop-ups, alerts, and frames in Selenium. 
20. What are the best practices for writing reliable and maintainable automation scripts?

==============================

#ManualTestingQuestions:

1. Have you worked in Agile methodology? Explain it.
2. Explain the points you consider while writing a good test case.
3. What is the Bug Life Cycle?
4. Difference between Test Scenario vs Test Case.
5. Difference between Functional vs Non-Functional Testing.
6. Difference between Smoke and Sanity Testing.
7. What is STLC in software testing?
8. Difference between Alpha and Beta Testing.
9. How many tests have you automated in a single sprint?
10. How do you decide which test cases to automate?
11. Which test cases would you not automate?
12. Is 100% automation possible?
13. Important things to consider when logging a bug.
14. Where do you write your test cases? In Excel or some other tool?

#AutomationTesting Interview Questions:

1. Difference between implicit and explicit waits.
2. Asked to share screen and write XPath for a given element.
3. Use of Actions class and Select class.
4. Explain your roles and responsibilities.
5. Exceptions faced while working with Selenium (Give 5 examples).
6. OOPS concepts (Inheritance, Abstraction, Polymorphism, etc.).
7. Difference between findElement() vs findElements().
8. How to handle alerts in Selenium?
9. Write Selenium code to take a screenshot.
10. What is priority in TestNG?
11. Reports used in your framework.
12. Difference between Scenario vs Scenario Outline in Cucumber BDD.
13. Explain the framework you are working on.
14. What are tags in Cucumber?
15. How do you manage test data in your framework?
16. Abstract class vs Interface.
17. Write Java code to reverse a string and perform array manipulation.
18. Questions from HashMap, HashSet.
19. Difference between Array and ArrayList.
20. What is Collection in Java?
21. Why is String immutable in Java?
22. Difference between Collection and Collections.
23. Difference between StringBuffer and StringBuilder.
24. API status codes difference (400, 401, 201, 200, etc.).
25. Difference between PUT vs PATCH request.
26. Basic GitHub commands (git add, git commit, git diff).

===========================================


Synechron Interview Questions for hashtag#QA role (6+ yr exp):
1. Explain about your framework?
2. Have you used POM in your framework?
3. What is Page Factory?
4. Suppose you have 7 pages in your application then to achieve POM what u will do?
5. Have you used interface in your framework other then selenium interfaces?
6. What are all the selenium interfaces?
7. Synchronization in selenium? syntax for implicit wait
8. How u will handle popup window ?other then get window handle
9. What is Listeners?
10. How u will handle alert?
11. How to get system date and time?
12. How to connect to database?
13. Exceptions in selenium?
14. Suppose u have class and abstract class in class there is a user defined constructor and main method which one will get execute first?
15. Primitives and Non Primitives datatypes in java? String is primitive or non primitive
16. What is Hashmap ? Can we store objects in hash map and how to retrieve them?
17. What is Jenkins?
18. What is the use of Pom.xml?
19. What is the use of testng.xml?
20. Annotations used in page object model


=======================================

 #HCLTech #AutomationTester Interview Questions ‚ùì 

#Round1:

1. Describe your experience with various automation testing tools.
2. How do you approach designing a robust automation framework from scratch? What are the key components you consider?
3. Can you explain the difference between data-driven testing and keyword-driven testing? Provide examples of when you might use each approach.
4. What strategies do you employ for handling dynamic elements or elements with changing attributes in automation scripts?
5. Have you worked with Continuous Integration/Continuous Deployment (CI/CD) pipelines in your automation projects? If yes, describe your role and contributions to the process.
6. Describe a particularly challenging automation problem you encountered in your previous projects. How did you solve it?
7. How do you handle testing of web services or APIs in your automation projects?
8.Have you integrated your automation tests with any test management or bug tracking tools? If yes, how did you approach it, and what benefits did you provide?
9. Can you discuss a scenario where you had to perform cross-browser testing in your automation projects? How did you ensure compatibility across different browsers?
10. How do you handle test data management and data-driven testing in your automation projects?

---

#Round2:

1. Explain your experience in designing and implementing automation frameworks. What design patterns have you utilized and why?
2. Describe your experience with Test-Driven Development (TDD) and Behavior-Driven Development (BDD). How do these methodologies influence your automation testing practices?
3. Have you implemented any strategies for parallel test execution in your automation frameworks? How do you ensure optimal resource utilization and testing efficiency?
4. Can you discuss your experience with integrating automation tests into the CI/CD pipeline? How do you ensure fast feedback loops and reliable test results within a continuous delivery environment?
5. How do you handle testing of microservices architecture in your automation projects? What challenges have you encountered, and how did you address them?
6. Describe your approach to handling non-functional testing aspects such as security, performance, and accessibility testing within your automation frameworks.
7. Have you implemented any techniques for automating the testing of mobile applications beyond traditional UI automation?
8. How do you ensure comprehensive test coverage in your automation suites, especially in scenarios involving complex logic?


=======================================


#Capgemini QA Automation interview questions!?

1. Write a program to find duplicate elements in a string array.
2. How would you introduce yourself briefly and effectively?
3. Explain the framework you have worked with in your automation testing process.
4. How do you handle closing the second window of a browser in automation testing?
5. Differentiate between XPath and CSS selectors.
6. What is the syntax for a LinkText XPath locator?
7. What changes or setups do you perform before starting execution in your framework?
8. How do you handle change requests in your application? Describe the steps you follow.
9. How often do you trigger regression test scripts? How do you manage them in your repository?
10. What challenges have you encountered in automation testing, and how did you overcome them?
11. Explain the differences between GET and POST methods in API testing.
12. What are the essential components of the GET and POST methods?
13. Discuss HTTP status codes like 401 and 503.
14. How do you validate the response code in API testing?
15. What format do you use for assertions in your tests?
16. Explain the difference between 200 and 201 HTTP status codes.
17. Provide the syntax for query parameters in API requests.


======================================

#Capgemini QA Automation interview questions!? ‚ùì 

1. Write a program to find duplicate elements in a string array.
2. How would you introduce yourself briefly and effectively?
3. Explain the framework you have worked with in your automation testing process.
4. How do you handle closing the second window of a browser in automation testing?
5. Differentiate between XPath and CSS selectors.
6. What is the syntax for a LinkText XPath locator?
7. What changes or setups do you perform before starting execution in your framework?
8. How do you handle change requests in your application? Describe the steps you follow.
9. How often do you trigger regression test scripts? How do you manage them in your repository?
10. What challenges have you encountered in automation testing, and how did you overcome them?
11. Explain the differences between GET and POST methods in API testing.
12. hat are the essential components of the GET and POST methods?
13. Discuss HTTP status codes like 401 and 503.
14. How do you validate the response code in API testing?
15. What format do you use for assertions in your tests?
16. Explain the difference between 200 and 201 HTTP status codes.
17. Provide the syntax for query parameters in API requests.

===============================================

Frequently asked #Selenium with #Java interview questions(2-5 yrs exp)
============

1.What is Selenium? Explain the different components of Selenium.
2.What is Selenium WebDriver, and how does it differ from Selenium RC?
3.How do you launch a browser in Selenium WebDriver?
4.How do you handle browser alerts in Selenium WebDriver?
5. How do you handle multiple windows in Selenium?
6. What is the difference between findElement() and findElements() in Selenium?
7.How do you capture screenshots in Selenium WebDriver?
8.How do you handle dropdowns in Selenium?
9.How do you handle dynamic web elements in Selenium?
10.How do you handle frames in Selenium WebDriver?
11.What are the different locators available in Selenium WebDriver?
12.Explain the difference between XPath and CSS selectors. Which one is faster?
13.How do you perform drag and drop in Selenium WebDriver?
14.How can you perform mouse hover actions in Selenium?
15.Explain the concept of implicit wait and explicit wait in Selenium.
16.What are the different types of waits available in Selenium WebDriver?
17.What is fluent wait in Selenium, and how is it different from explicit wait?
18.How can you switch between different browser tabs using Selenium WebDriver?
19.How do you interact with web elements like buttons, text boxes, etc., in Selenium?
20.How can you handle JavaScript alerts using Selenium WebDriver?

TestNG
============
1.How do you integrate Selenium with TestNG?
2.Explain the annotation hierarchy in TestNG.
3.What is the difference between @BeforeMethod and @BeforeClass in TestNG?
4.How do you execute test cases parallelly in TestNG?
5.How can you prioritize test cases in TestNG?
6.What is the purpose of @DataProvider in TestNG?
7.How do you run failed test cases in TestNG?
8.How do you generate TestNG reports?
9.What is SoftAssert and HardAssert in TestNG?
10.How do you group test cases in TestNG?

=======================================

#InterviewQuestions #Java #Selenium #SDET #AutomationTesting #CrackCodingRound #Testing #QA #SeniorSDET #APITesting #UITesting #Part2

Round 1 (L1): Focuses on technical skills, involving coding problems to assess foundational knowledge and problem-solving abilities.
Round 2 (L2): Explores advanced technical concepts and domain-specific challenges.
Round 3 (L3): Managerial interview to evaluate communication skills, teamwork, and handling real-world scenarios.
Round 4 (L4): HR interview for cultural fit, salary discussions, and formalities.

API Testing Questions:
1. What is the difference between PUT and PATCH?
2. What is the difference between authorization and authentication?
3. Explain the various HTTP status codes across series 1xx, 2xx, 3xx, 4xx, and 5xx.
4. Given a JSON payload, retrieve specific nodes based on provided conditions.
5. What are serialization and deserialization? Write code to create a POJO for handling them.
6. Explain the API framework you‚Äôve worked on (e.g., Cucumber BDD, TestNG). Include details about reporting, data-driven testing, etc.
Code and automate a given API.
7. If given any API for testing, what aspects will you focus on?

========================================


1.What is the difference between an abstract class and an interface in Java? 
2.Explain the concept of method overloading and method overriding with examples. 
3.What are the key differences between a static method and an instance method? 
4.What is the difference between '==' and '.equals()' when comparing objects? 
5.Explain the concept of the Java memory model, stack vs. heap. Exception Handling 
6.What is the purpose of the throw and throws keywords in Java? 
7.Can you explain how the exception hierarchy works in Java? 
8.How does the Java finally block work, and when is it executed? Multithreading & Concurrency 
9.Explain the significance of the volatile keyword in Java. 
10.How does a thread pool work in Java? Why should you use it? 
11.What is the difference between wait(), notify(), and notifyAll() in Java? Collections Framework 
12.How do you prevent a ConcurrentModificationException in Java collections? 13.What is the difference between Iterator and ListIterator? 
14.Explain the difference between LinkedHashMap and HashMap in Java. JVM Internals 
15.What is the Java ClassLoader, and how does it work? 
16.Can you explain the concept of Just-In-Time (JIT) compilation in Java? 
17.How does garbage collection work in Java, and what are the types of GC?


========================================

#Deloitte - Interview Questions for QA Automation Profile

‚úÖ Technical 1
1. Common question( Intro+ project + framework architecture)
2. Data selection in Calendar, Excel iteration then send values to text box.
3. What are Idempotent methods? How is it relevant in RESTful web
services domain?
4. Based on what factors, you can decide which type of web services you
need to use ‚Äî SOAP or REST?
5. What is Payload in terms of RESTful web services?
6. importance of API documentation in API automation testing?
7. Have you integrated automation testing into CI/CD pipelines before?
8. Explain PSVM, SYSOUT?
9. Jenkins and GIT
10. Basic selenium question and sql?

‚úÖ Technical 2

1. Common question(Intro)
2. Java(Collection Questions only)
3. Java Programming (Sort array in reverse order)
4. How do you handle maintenance and updates of automated test scripts?
5. Does finally {} block always run?
6. Automate one page (Login-Add to cart Assert-logout-Reporting).

‚úÖ Managerial Round

1. In manual testing, it takes 10 minutes, whereas in automation, it takes
10 minutes to check a functionality, so what would be your preference? and
Why?
2. how comfortable are you with programming languages other than Java
Selenium?
3. How do we identify what can be automated?
4. Can you discuss a challenging automation project you‚Äôve worked on and
how you overcame obstacles?
5. How do you stay updated with the latest trends and best practices in
automation testing?
6. Normal discussion about previous work? What you like the most?

=============================================

#Automation Testing Interview Questions:

1. Difference between implicit and explicit waits.
2. Asked to share the screen and write XPath for a given element.
3. Use of Actions class and Select class.
4. Explain your roles and responsibilities.
5. Exceptions faced while working with Selenium (Give 5 examples).
6. OOPS concepts (Inheritance, Abstraction, Polymorphism, etc.).
7. Difference between findElement() vs findElements().
8. How to handle alerts in Selenium?
9. Write Selenium code to take a screenshot.
10. What is the priority in TestNG?
11. Reports used in your framework.
12. Difference between Scenario vs Scenario Outline in Cucumber BDD.
13. Explain the framework you are working on.
14. What are tags in Cucumber?
15. How do you manage test data in your framework?
16. Abstract class vs Interface.
17. Write Java code to reverse a string and perform array manipulation.
18. Questions from HashMap, HashSet.
19. Difference between Array and ArrayList.
20. What is a Collection in Java?
21. Why is String immutable in Java?
22. Difference between Collection and Collections.
23. Difference between StringBuffer and StringBuilder.
24. API status codes difference (400, 401, 201, 200, etc.).
25. Difference between PUT vs PATCH request.
26. Basic GitHub commands (git add, git commit, git diff)

==============================================

Scenario Based Interview Questions for Automation Tester #QA

1. Your automated tests for a login page are failing intermittently. How would you investigate and address this issue?

2. The website you're testing has elements that constantly change IDs or positions. What techniques would you use to create reliable locators for your tests?

3. A critical API endpoint is returning unexpected errors. How would you use automation to help debug this?

4. Your web application needs to work flawlessly across different browsers (Chrome, Firefox, Safari). How would you approach cross-browser test automation?

5. Users complain about slow loading times on a specific page. How can automation help identify performance issues?

6. You need to test a form with a large number of different input values. How would you efficiently manage and use test data in your automation?

7. The company is prioritizing mobile users. How would you automate testing on different mobile devices and operating systems?

8. You encounter a feature that seems impossible to automate (e.g., audio/video playback). How do you handle this in your test strategy?

9. You're tasked with automating tests for an old application with limited documentation. How would you approach this?

10. How would you integrate your automated tests into a Continuous Integration/Continuous Delivery pipeline?

===================================================

1)Difference between Scenario and Scenario Outline in BDD Cucumber?
2)How to disable a test in TestNG?
3)What are the different Hooks in TestNG? 
4)Tell me 5 interfaces that you used in your framework.
5)How to switch from one window to another(Code)?
6)How to handle Synchronisation issues in your project??
7)How to get the Font & Color of a text?
8)Write a program to find out the largest & smallest number in an array.
9)How to get data from an Excel File (Apache POI)?
10)Difference between Bug & Defect??
11)Difference between Assert & Verify??
12) Write code for ‚ÄúWindow Scrolling‚Äù ??


============================================

1. Explain the automation framework.
 2. What unit testing framework are you using?
 3. Difference between JUnit and TestNG.
 4. How can you rerun failed test cases?
 5. Which CI/CD tool have you used?
 6. Do you know how to create a parameterized pipeline job?
 7. Write a program to validate usernames (alphanumeric, no spaces/special characters, no duplicates).
 8. Write a program to count character occurrences in a string.
 9. Find the highest number in an array without using inbuilt methods.
 10. Reverse a string without using inbuilt methods.
 11. Difference between String and StringBuffer.
 12. Difference between private, public, and protected access modifiers.
 13. Explain the collections framework hierarchy.
 14. Difference between Hashtable and HashSet.
 15. Difference between Comparable and Comparator.
 16. Explain the exception hierarchy.
 17. Write a program to create a custom exception.
 18. What is an interface and an abstract class?
 19. Why is an abstract class allowed to have a constructor?
 20. Difference between final, finally, and finalize.
 21. Explain polymorphism.
 22. Write a program to override a function.
 23. Do you know about Java 8?
 24. What are Java Streams and Lambda Expressions?
 25. Difference between git rebase and git merge.
 26. When to use git rebase?
 27. What is a functional interface?
 28. Difference between status codes 401 and 403.
 29. Difference between OAuth 1.0 and OAuth 2.0.
 30. Write a program using the RestAssured library with assertions for GET/POST calls.
 31. What is the content type in OAuth 2.0?
 32. Write a SQL query using JOIN (two tables with columns given).
 33. Handle multiple windows in Selenium.
 34. Capture screenshots in Selenium.
 35. How do you handle synchronization in automation scripts?
 36. Write the syntax for Fluent Wait.
 37. Read/write data from an Excel file.
 38. Different stages of an automation test.
 39. Types of testing.
 40. Difference between priority and severity.
 41. Fields required to log a bug/defect.
 42. What is a test plan and what does it include?
 43. Briefly explain the phases of SDLC.
 
 ==================================================
 
 1. Please introduce yourself.
2. Please explain your Automation Framework, all the components.
3. What is a Page Object Model?
4. How do you run your test cases in parallel in Cucumber?
5. Explain the contents of the Runner File in Cucumber?
6. What is a Singleton Design Pattern?
7. What are the advantages and disadvantages of the Page Object Model?
8. What is Selenium Grid?
9. Explain the WebDriver create statement line?
11. Explain the Maven Lifecycle?
12. How do you run the failed test cases?
13. How do you generate Reports in Selenium?
14. How do you customise reports after your test execution?
15. What kind of waits are there in Selenium?
16. Write the Code Snippet for Explicit Wait?
17. Write the Code Snippet for Drag and Drop in Selenium?
18. How do you switch to different Windows in Selenium?
19. Why do we use SET in Window Handles?
20. Write the Code for taking screenshot in Selenium?
21. What is the difference between Scenario and Scenario Outline in Cucumber?
22. How do you pass data to your Selenium Scripts?
23. How do you decide the priorities of your Test Cases?
24. If you want to execute one test case again and again how do you do that?
25. What are the different annotations used in TestNG?
26. Write the hierarchy of annotations in TestNG?
27. What is the defect life cycle?
28. What is the difference between Agile and Waterfall Model?
29. What is the difference between 201 and 204 Status Code?
30. What is the difference between 401 and 403 Status Code?
31. What are the components of an API Request?
32. What is the difference between Query Parameters and Path Parameters?
33. How do you resolve Conflicts in Git?
34. What is the difference between git pull and git patch?
35. Explain the use of Jenkins in the Automation Framework?
 
==========================================================

#QA role
üöÄ Java & OOPs ConceptsüöÄ
üîπ What is the final keyword in Java?
üîπ What is a constructor? Can we override a constructor?
üîπ Where is a constructor used in your framework?
üîπ What is abstraction?
üîπ How to achieve multiple abstraction in Java?
üîπ What is an interface?
üîπ What is encapsulation? Where have you used it in your project?
üîπ What is polymorphism? Where have you applied it in your framework?
üîπ What is method overloading and method overriding? Explain both and where you used them in your framework?
üîπ Have you used collections in your framework?
üîπ What is the static keyword in Java?
üîπ What is memory management in Java?
üîπ What is garbage collection in Java?
üîπ Difference between constructor overloading and method overloading?
üîπ What are exceptions in Java?
üîπ List some exceptions you faced during automation and how you handled them.

üöÄ Selenium & Web AutomationüöÄ

üîπ How do you handle dynamic web elements?
üîπ Write the syntax of the Select class and explain its methods.
üîπ How do you handle iFrames?
üîπ How do you determine whether an element is an iFrame or not?
üîπ How do you handle mouse actions in Selenium?
üîπ How do you handle keyboard actions in Selenium?
üîπ How do you press the ENTER key using the Actions class? Write the syntax.
üîπ How do you use the SHIFT key to type uppercase letters in Selenium? Write the syntax.
üîπ How to handle dynamic elements?
üîπ How to print all the links from a webpage? Where do you store those links?
üîπ How to check for broken links? How would you validate each link if there are 20 links on a page?
üîπ What is the finally block in Java?
üîπ Difference between throw and throws?
üîπ Difference between findElement() and findElements()?

üöÄ Cucumber & TestNGüöÄ
üîπ Explain your framework structure.
üîπ How do you perform parallel execution in your framework?
üîπ What are Cucumber options?

üöÄGit & Version ControlüöÄ
üîπ Which version control system are you using?
üîπ If you join a new project, what Git commands do you use from start to end? What are the stages you follow? (Write in Notepad)

üöÄ SQL & LinuxüöÄ
üîπ Do you have any idea about SQL? Tell me a few queries you performed.
üîπ Do you have any idea about Linux commands?

üöÄ Scenario-Based QuestionsüöÄ
üîπ You have 3 frames (Frame A, Frame B, Frame C). After clicking Frame C, the application opens another tab containing a login, password, and sign-in button. Write the Selenium automation script for this scenario (in Notepad).
üîπ If you have 20+ links on a webpage, how would you check if each link is valid?

===========================================

1. Please introduce yourself.
2. Please explain your Automation Framework, all the components.
3. What is a Page Object Model?
4. How do you run your test cases in parallel in Cucumber?
5. Explain the contents of the Runner File in Cucumber?
6. What is a Singleton Design Pattern?
7. What are the advantages and disadvantages of the Page Object Model?
8. What is Selenium Grid?
9. Explain the WebDriver create statement line?
11. Explain the Maven Lifecycle?
12. How do you run the failed test cases?
13. How do you generate Reports in Selenium?
14. How do you customise reports after your test execution?
15. What kind of waits are there in Selenium?
16. Write the Code Snippet for Explicit Wait?
17. Write the Code Snippet for Drag and Drop in Selenium?
18. How do you switch to different Windows in Selenium?
19. Why do we use SET in Window Handles?
20. Write the Code for taking screenshot in Selenium?
21. What is the difference between Scenario and Scenario Outline in Cucumber?
22. How do you pass data to your Selenium Scripts?
23. How do you decide the priorities of your Test Cases?
24. If you want to execute one test case again and again how do you do that?
25. What are the different annotations used in TestNG?
26. Write the hierarchy of annotations in TestNG?
27. What is the defect life cycle?
28. What is the difference between Agile and Waterfall Model?
29. What is the difference between 201 and 204 Status Code?
30. What is the difference between 401 and 403 Status Code?
31. What are the components of an API Request?
32. What is the difference between Query Parameters and Path Parameters?
33. How do you resolve Conflicts in Git?
34. What is the difference between git pull and git patch?
35. Explain the use of Jenkins in the Automation Framework?

===========================================

üî∑ Java Questions:

1. What are the main principles of Object-Oriented Programming (OOP)?
2. Can you explain the difference between == and equals() in Java?
3. How do you handle exceptions in Java?
4. What is the purpose of the final keyword in Java?
5. Explain the concept of inheritance and its types in Java.
6. What are Java Collections, and can you name some commonly used interfaces?
7. What is the difference between an List and a Set?
8. Can you explain the concept of finally?
9. Why String is Immutable in Java?

üî∑ Selenium Questions:

1. What is Selenium, and how does it differ from other testing tools?
2. How do you locate elements in Selenium? Can you explain the different locator strategies?
3. What are the advantages of using Selenium WebDriver over Selenium IDE?
4. How do you handle alerts and pop-ups in Selenium?
5. Can you explain the Page Object Model (POM) design pattern?
6. How do you perform cross-browser testing using Selenium?
7. What is the difference between implicit wait, explicit wait, and fluent wait?
8. How do you take screenshots in Selenium?
9. Can you explain how to handle dynamic web elements in Selenium?
10. What are some common challenges you face while automating tests with Selenium?

üî∑ Testing Concepts:

1. What is the difference between functional and non-functional testing?
2. Can you explain the concept of test automation frameworks?
3. How do you ensure the reliability and maintainability of your automated tests?
4. What is regression testing, and why is it important?
5. Can you explain the difference between smoke testing and sanity testing?
6. What is a test case, and what are its key components?
7. How do you prioritize test cases in your testing strategy?
8. What is the role of Continuous Integration/Continuous Deployment (CI/CD) in testing?
9. How do you measure the effectiveness of your test automation?
10. Can you explain the concept of Behavior-Driven Development (BDD)?

üî∑ Programming Questions:

1. Write a function to reverse a string in Java.
2. How would you implement a simple test case using JUnit/TestNG?
3. Program to print even numbers from 1 to 100
4. Write a program to find the factorial of a number using recursion.
5. How do you sort an array in Java? Can you implement a sorting algorithm?
6. Write a function to check if a string is a palindrome.
7. How would you implement a simple login functionality using Java?
8. Can you write a program to find the largest and smallest numbers in an array?
9. Explain the concept of recursion with an example.
10. How do you handle null values in Java?

=============================================

ùêñùê°ùêöùê≠ ùê¢ùê¨ ùêìùêûùê¨ùê≠ùêçùêÜ?
TestNG (Test Next Generation) is a testing framework inspired by JUnit and NUnit but with more powerful features. 

ùêñùê°ùê≤ ùêÉùê® ùêñùêû ùêçùêûùêûùêù ùêìùêûùê¨ùê≠ùêçùêÜ?
- Flexible Annotations: Organize test code efficiently with annotations like @Test, @BeforeMethod, and @AfterMethod.
- Parallel Testing: Run tests in parallel to save time, essential for large projects.
- Data-Driven Testing: Easily test with multiple data sets using the @DataProvider annotation.
- Test Configuration: Customize test execution with configurable suites, groups, and dependencies.
- Reporting: Generate detailed HTML and XML reports for better insights.
Seamless Integration: Works well with build tools like Maven and Gradle, and supports CI/CD pipelines for continuous testing.

ùêáùê®ùê∞ ùê≠ùê® ùêàùêßùê≠ùêûùê†ùê´ùêöùê≠ùêû ùêìùêûùê¨ùê≠ùêçùêÜ ùê∞ùê¢ùê≠ùê° ùêíùêûùê•ùêûùêßùê¢ùêÆùê¶ ùêâùêöùêØùêö?
1. Add TestNG Dependency:
 - If your Maven Project, add the following dependency in your `pom.xml` file:
 
 <dependency>
 <groupId>org.testng</groupId>
 <artifactId>testng</artifactId>
 <version>7.8.0</version>
 <scope>test</scope>
 </dependency>

2. Create a Test Class:
 - Write a Selenium test case inside a class and annotate the test method with `@Test`.

3. Run the Test:
 - Right-click on the test class in your IDE and choose `Run As > TestNG Test`.
 - Alternatively, create a TestNG XML file to define your test suite and run it.

ùêñùê°ùêöùê≠ ùêöùê´ùêû ùê≠ùê°ùêû ùêìùêûùê¨ùê≠ùêçùêÜ ùêáùê®ùê®ùê§ùê¨?
TestNG hooks are special annotations that define the order in which test methods, configuration methods, and suites are executed. 
These hooks include:

1. @BeforeSuite / @AfterSuite: Executed before/after all tests in the suite.
2. @BeforeTest / @AfterTest: Executed before/after the test tag in the XML file.
3. @BeforeClass / @AfterClass: Executed before/after the first method in the class is invoked.
4. @BeforeMethod / @AfterMethod: Executed before/after each test method in the class.
5. @BeforeGroups / @AfterGroups: Executed before/after specified groups of tests run.
6. @BeforeClass / @AfterClass: Executed once before/after the first/last method in the current class.

-============================================

1. What is Spring Boot, and how does it differ from the traditional Spring Framework? 
2. What is the purpose of @SpringBootApplication annotation? 
3. Explain the concept of auto-configuration in Spring Boot. 
4. What is the role of application.properties or application.yml in Spring Boot? 
5. What are the advantages of using Spring Boot over traditional Spring applications? 
6. What is the difference between @Component_@Service_ @Repository, and @Controller in Spring Boot? 
7. How do you create a Spring Boot RESTful web service? 
8. What is Spring Boot Actuator, and what are its uses? 
9. What is the significance of @RestController and how is it different from @Controller? 
10. How do you handle exceptions in Spring Boot applications? 
11. What is Spring Boot Dev Tools, and what benefits does it provide during development? 
12. How do you use Spring Boot to connect to a database (e.g., MySQL or PostgreSQL)? 
13. Explain the difference between @Bean and @Component in Spring Boot. 
14. How do you configure logging in Spring Boot? 
15. What are Spring Boot profiles, and how do you manage them for different environments (dev, prod)? 
16. How do you implement security in a Spring Boot application? 
17. What is Spring Boot's embedded server, and how does it work? 18. What is the use of @EnableAutoConfiguration in Spring Boot? 19. What is the difference between Spring Boot's application.properties and application.yml files? 
20. What is Spring Boot's support for creating microservices? 
21. How does Spring Boot handle dependency injection? 
22. How do you test a Spring Boot application using @SpringBootTest? 
23. Explain the difference between @RequestMapping_ @GetMapping_ @PostMapping and other HTTP method annotations. 
24. What are Spring Boot's default error handling mechanisms, and how can they be customized? 
25. How do you perform batch processing in Spring Boot? 
26. What is Spring Data JPA, and how is it used in Spring Boot? 
27. How do you manage transaction handling in Spring Boot applications? 
28. What are the different ways to run a Spring Boot application? 29. Explain the Spring Boot logging mechanism with default loggers (e.g., Logback). 
30. How do you configure Spring Boot to send an email (e.g., using JavaMailSender)?

=================================

1a) Write a code to fetch data from one excel sheet and dump into the other excel sheet ?
1b) Among all the given locators which locator is the fastest of all?
2) If the method fails to find the element which of the two methods throws you the expectations?
3) Why should we use selenium?
4) How to execute multiple Test cases at a time in TestNG?
5) Which method allows you to change control from one window to another?
6) Which annotations executed first?
7) Which open source tolls allow us to read and write Ms Excel files using Java?
8) How many types of XPath are there in selenium?
9) In selenium 4,which of the following method allows us to take screenshots of a specific web element?
10) Which language is used in gherkins?
11) When you only want to access a single element on a webpage which method will you use?
12) Which class is used for the drop-down in selenium?
13) Which component of selenium is most important?
14) Which keywords are used in gherkins?
15) How many locators does selenium have in total?
16) Which exception is shown in selenium when there is a delay in the loading time of the elements with which we are interacting?
17) Write correct syntax for absolute path and Relative xpath
18) What is User interface testing?
19) Which XPath search dissimilar nodes in XML document from the current node
20) What do you mean by open source software 
21) Which of the following browsers support selenium?
22) Which method is present in POM to locate webelement?
23) Which type of wait command waits for a certain amount of time before it throws an exception?
24) Which tool you will use to manage and organised jar and lib in automation?
25) _ is a type of change related testing performed after fixing a defect to confirm that a failure caused by the defect does not reoccur
26) Which type of XPath starts with a double forward slash?
27) Which type of XPath starts with a single forward slash?
28) How many types of wait commands does the selenium web driver provide?
29) Which of the following waits takes timeout and polling frequency as its parameter?

========================================

 ùó§ùóî ùóîùòÇùòÅùóºùó∫ùóÆùòÅùó∂ùóºùóª ùóúùóªùòÅùó≤ùóøùòÉùó∂ùó≤ùòÑ ùó§ùòÇùó≤ùòÄùòÅùó∂ùóºùóªùòÄ:üëâ

1. Can you explain the software testing life cycle (STLC) and its phases?
2.What is the difference between verification and validation?
3. How do you perform regression testing, and why is it important?
4. Explain test case design techniques with examples.
5. What is the difference between functional and non-functional testing?
6. What are the key components of a good test case?
7. Explain Java exception handling and its importance.
8. What is the difference between final, finally, and finalize keywords in Java?
9. Difference between arraylist and linkedlist in Java?
10. What are the key differences between HashSet and Map in Java?
11. Write a Java program to reverse a string.
12. What is the difference between findElement and findElements in Selenium?
13. What is the purpose of BeforeSuite and AfterSuite annotations in TestNG?
14. Explain the structure and purpose of a TestNG XML file.
15. What are the different types of waits available in Selenium, and when should each be used?
16. Explain the inheritance concept with example.
17. Explain the concept of polymorphism in Java with example.
18. What is the difference between method overloading and method overriding in Java?
19. What are the various locators you are using in your day-to-day life?
20. What are the various selenium components, and which components are you using?
21. Write a syntax to initialize the WebDriver?
22. How to handle alerts in selenium?
23. Explain absolute and relative XPath with an example?
24. How do you get to know if the developer has fixed the issues or not?
25. Which java & selenium versions are you using in your project?
26. How do you handle if XPath is changing dynamically?
27. What are your roles and responsibilities in the project?

===========================================

1. what is the advantage of selenium Webdriver?

2. What is the difference between findElement and findElements in selenium?

3. How do you locate elements on a web page using Selenium WebDriver?

4. What are the different types of locators supported by Selenium WebDriver?

5. How do you handle dynamic elements on a web page in Selenium?

6. What is the importance of implicit and explicit waits in Selenium WebDriver?

7. How do you handle multiple windows and frames using Selenium WebDriver?

8. Explain the concept of TestNG and how it is used with Selenium for test automation?

9. How do you perform mouse and keyboard actions using SeleniumWebDriver?

10. What are the advantages and limitations of Selenium for test automation?

11. How do you handle SSL certificates and security-related issues in Selenium?

12. Can you automate testing for mobile applications using Selenium? If yes, how?

13. How do you manage test data and test configurations in Selenium tests?

14. What is Page Object Model (POM), and why is it used in Selenium automation?

15. How do you handle exceptions and errors in Selenium WebDriver scripts?

16. How to take screenshot in selenium?

17. Data provider in the TESTNG?

18.How to validate links are valid or not on the webpage?

19. How you manage drag and drop activity in selenium?

20.what is the use of testng.xml file?

======================================

TestNG / JUnit with Selenium

1. Explain how you would use TestNG annotations like @BeforeClass, @AfterClass, @BeforeMethod, and @AfterMethod in the context of Selenium test automation.

2. How would you organize your Selenium WebDriver tests using TestNG or JUnit for a large-scale automation suite?

3. Scenario: You have multiple test cases with dependencies on one another. How would you handle this using TestNG? What is the best approach for managing test dependencies?

4. What is the purpose of @DataProvider in TestNG, and how would you use it to implement data-driven testing in your Selenium tests?

5. How would you use JUnit for parameterized testing in your Selenium WebDriver automation scripts? Explain with examples.

6. How would you integrate TestNG with Maven to ensure your tests are executed as part of your build pipeline?

7. Scenario: A certain test case in your suite requires special configuration (e.g., admin-level permissions). How would you handle this configuration in your TestNG suite using @BeforeClass or @BeforeMethod?

8. How do you handle test retries in TestNG or JUnit, and what strategies would you use to re-run failing tests automatically?

9. How would you generate test reports using TestNG and integrate them with Jenkins?

10. Scenario: You want to parallelize your test execution using TestNG and Selenium. How would you configure TestNG to run tests in parallel on multiple browsers or operating systems?

====================================

1) Provide me a brief overview of the tools and technologies you have worked on?
2) Describe Smoke, Sanity and Regression Testing? Why do we need to use these 3? 
3) Find me the first and last occurrence of the letter ‚Äòa‚Äô in amazonaanazzz with index number
4) How do you specify environment variables for Maven?
5) How do you specify a property in Maven that can be overridden at build time?
6) How will you execute methods or test cases in TestNG in a different order/your order?
7) What is the difference between @Factory and @Dataprovider annotations?
8) Write the code snipped for passing values 1 and 2 to the parameters val1 and val2 through the XML file.
9) How to test or handle browser notifications?
10) Explain different xpath axes?
 11) Give an example of method overloading concept that you have used in Selenium?
12) Give a scenario where an interface is used in your framework?
13) Can we have static methods in an Interface?
14) In a class implementing an interface, can we change the value of any variable defined in the interface?
15) How to search for text in the current working repo/directory? 
16) How to save local changes made without committing or moving them to a remote repository?
17) y default which join is implemented in SQL?
18) What happens when CI/CD jobs stop in between? 
19) How do you manage CI/CD pipeline when high priority scenarios fail during execution?
20) What is the difference between HTTPS, SSL and TLS? 
21) How would you handle authentication in Cucumber scenarios for web applications?


===========================================

#Interview Questions for QA Automation Profile:

‚úÖ Technical 1
1. Common question( Intro+ project + framework architecture)
2. Data selection in Calendar, Excel iteration then send values to text box.
3. What are Idempotent methods? How is it relevant in RESTful web
services domain?
4. Based on what factors, you can decide which type of web services you
need to use ‚Äî SOAP or REST?
5. What is Payload in terms of RESTful web services?
6. importance of API documentation in API automation testing?
7. Have you integrated automation testing into CI/CD pipelines before?
8. Explain PSVM, SYSOUT?
9. Jenkins and GIT
10. Basic selenium question and sql?

‚úÖ Technical 2

1. Common question(Intro)
2. Java(Collection Questions only)
3. Java Programming (Sort array in reverse order)
4. How do you handle maintenance and updates of automated test scripts?
5. Does finally {} block always run?
6. Automate one page (Login-Add to cart Assert-logout-Reporting).

‚úÖ Managerial Round

1. In manual testing, it takes 10 minutes, whereas in automation, it takes
10 minutes to check a functionality, so what would be your preference? and
Why?
2. how comfortable are you with programming languages other than Java
Selenium?
3. How do we identify what can be automated?
4. Can you discuss a challenging automation project you‚Äôve worked on and
how you overcame obstacles?
5. How do you stay updated with the latest trends and best practices in
automation testing?
6. Normal discussion about previous work? What you like the most?

========================================

1. What are all the versions of selenium?
2. Can you please tell the return type of all the elements?
3. How will you handle dynamic elements?
4. What are HTTP Methods?
5. Explain the use of an object repository in Selenium (.properties file). 
6. How do you store data in a .properties file? 
7. What is Page Factory in Selenium? 
8. What is the difference between @BeforeClass and @BeforeTest in TestNG? 
9. What are the tasks typically written under the @BeforeTest annotation? 
10. How can you skip a test case in Cucumber? 
11. How do you rerun failed test cases in TestNG? 
12. How do you group and run test cases in TestNG? 
13. What would you include under the @BeforeSuite annotation? 
14. Can you explain the different locators used in Selenium? 
15. What is a collection in Java? 
16. Explain the hierarchy of exceptions in Java.

========================================














