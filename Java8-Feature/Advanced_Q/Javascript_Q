#Follow4more Amit Jain 💯🔥💯
🔥🔥 Some important questions ofJavaScript 💯💯


### **Basic Level**
1. What is JavaScript, and how is it different from Java? 
2. What are the data types in JavaScript? 
3. Explain `var`, `let`, and `const` and their differences. 
4. What is the difference between `==` and `===`? 
5. What are JavaScript closures? Provide an example. 
6. What is the difference between `null` and `undefined`? 
7. How does the `typeof` operator work? 
8. Explain the difference between synchronous and asynchronous code. 
9. What is hoisting in JavaScript? 
10. How does the scope work in JavaScript? Explain with examples. 

### **Intermediate Level**
1. What are JavaScript promises? How are they used? 
2. What is the purpose of `async/await` in JavaScript? 
3. How does the event loop work in JavaScript? 
4. Explain the difference between `call()`, `apply()`, and `bind()`. 
5. What are arrow functions, and how are they different from regular functions? 
6. What is the difference between shallow copy and deep copy? 
7. How do you handle errors in JavaScript? Explain `try...catch` with examples. 
8. What is the difference between `forEach`, `map`, `filter`, and `reduce`? 
9. What are JavaScript modules, and how are they imported/exported? 
10. What is the difference between `spread` and `rest` operators? 

### **Advanced Level**
1. What are prototypes in JavaScript, and how do they work? 
2. Explain the concept of event delegation. 
3. What is the difference between `setTimeout` and `setInterval`? 
4. What are Web APIs? Name some commonly used ones. 
5. What is `this` in JavaScript? How does it behave in different contexts? 
6. How does JavaScript manage memory, and what are memory leaks? 
7. Explain the concept of currying in JavaScript. 
8. What are generators, and how are they different from regular functions? 
9. What is the difference between `weakMap` and `map` in JavaScript? 
10. How would you optimize a JavaScript application for performance? 

### **Coding Challenges**
1. Write a function to reverse a string. 
2. Implement a debounce function. 
3. Write a function to flatten a nested array. 
4. Create a polyfill for `Promise.all()`. 
5. Write a function to find the longest palindrome in a string. 
6. Implement a function to deep clone an object. 
7. Write a function to check if a number is prime. 
8. Build a function to perform binary search on a sorted array. 
9. Write a function to sort an array without using the built-in sort method. 
10. Create a function to throttle an event. 

====================================



𝗛𝗧𝗠𝗟
1. What is the difference between `id` and `class` attributes?
2. How does the `doctype` declaration affect a webpage?
3. Explain semantic HTML and its importance.
4. What are `meta` tags, and why are they used?
5. What is the difference between `span` and `div` tags?
6. How does the `defer` attribute in a script tag work?
7. What is the difference between inline, block, and inline-block elements?
8. How do you optimize images for web performance in HTML?
9. What are custom data attributes, and how are they used?
10. How would you create an accessible custom tooltip using only HTML?

𝗝𝗔𝗩𝗔𝗦𝗖𝗥𝗜𝗣𝗧
1. What are closures, and how are they used?
2. Explain the difference between `var`, `let`, and `const`.
3. What is the event loop in JavaScript?
4. How does prototypal inheritance work?
5. What are promises, and how do they compare to async/await?
6. What is the difference between `==` and `===`?
7. Explain the concept of "hoisting" in JavaScript.
8. How do you handle errors in JavaScript?
9. What is debouncing and throttling in JavaScript?
10. How would you implement a deep clone of an object without using libraries?

𝗥𝗘𝗔𝗖𝗧
1. What is the virtual DOM, and how does it work?
2. How do React functional components differ from class components?
3. What are React hooks, and why are they used?
4. Explain the concept of lifting state up in React.
5. What is the purpose of `useEffect` and how is it used?
6. How does context API work in React?
7. What is the difference between controlled and uncontrolled components?
8. How do you optimize a React application’s performance?
9. What are React portals, and how are they useful?
10. How would you implement a custom hook to debounce user input in a React application?

𝗔𝗰𝗰𝗲𝘀𝘀𝗶𝗯𝗶𝗹𝗶𝘁𝘆 (𝗔𝟭𝟭𝗬)
1. What is ARIA, and why is it important?
2. How would you ensure a form is accessible?
3. What are some common accessibility issues in web development?
4. How do you make images accessible?
5. What is a screen reader, and how does it work?
6. How would you create an accessible navigation menu?
7. What is the difference between `role="button"` and a `<button>` element?
8. How do you test a webpage for accessibility?

𝗢𝗽𝘁𝗶𝗺𝗶𝘇𝗮𝘁𝗶𝗼𝗻
1. What is lazy loading, and how do you implement it?
2. How do you reduce the size of a JavaScript bundle?
3. What are the benefits of using a Content Delivery Network (CDN)?
4. How do you optimize CSS delivery?
5. What is caching, and how does it improve performance?
6. What are critical rendering paths?
7. How do you optimize for Time to First Byte (TTFB)?
8. How do service workers improve web performance?